#%RAML 0.8
---
title: OpenLMIS Fulfillment API
version: "@version@"
baseUri: "@baseUrl@"
protocols: [ HTTP, HTTPS ]

documentation:
    - title: Getting Started
      content: Welcome to the OpenLMIS fulfillment-service documentation.

schemas:
  - orderDto: !include schemas/orderDto.json
  - orderDtoPage: !include schemas/orderDtoPage.json
  - orderDtoArray: |
      {
          "type": "array",
          "items": {"type": "object", "$ref": "schemas/orderDto.json" }
      }
  - orderLineItemDto: !include schemas/orderLineItemDto.json
  - orderLineItemDtoArray: |
        {
            "type": "array",
            "items": { "type": "object", "$ref": "schemas/orderLineItemDto.json" }
        }
  - orderFileColumnDto: !include schemas/orderFileColumnDto.json
  - orderFileTemplateDto: !include schemas/orderFileTemplateDto.json
  - proofOfDeliveryDto: !include schemas/proofOfDeliveryDto.json
  - proofOfDeliveryDtoArray: |
        {
            "type": "array",
            "items": { "type": "object", "$ref": "schemas/proofOfDeliveryDto.json" }
        }
  - proofOfDeliveryLineItemDto: !include schemas/proofOfDeliveryLineItemDto.json
  - proofOfDeliveryLineItemDtoArray: |
        {
            "type": "array",
            "items": { "type": "object", "$ref": "schemas/proofOfDeliveryLineItemDto.json" }
        }
  - orderNumberConfigurationDto: !include schemas/orderNumberConfigurationDto.json
  - templateDto: !include schemas/templateDto.json
  - templateDtoArray: |
        {
            "type": "array",
            "items": { "type": "object", "$ref": "schemas/templateDto.json" }
        }
  - templateParameterDto: !include schemas/templateParameterDto.json
  - templateParameterDtoArray: |
        {
            "type": "array",
            "items": { "type": "object", "$ref": "schemas/templateParameterDto.json" }
        }
  - transferProperties: !include schemas/transferProperties.json

  - localizedMessage: !include schemas/localizedMessage.json

  - configurationSetting: !include schemas/configurationSetting.json
  - configurationSettingArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/configurationSetting.json" }
      }

  - resultDto: !include schemas/resultDto.json

  - badRequestResponse: |
      {
          "oneOf": [{
            "type": "object",
            "$ref": "schemas/localizedMessage.json"
          }, {
            "type": "array",
            "items": { "type": "object", "$ref": "schemas/localizedMessage.json" }
          }]
      }

traits:
    - secured:
          queryParameters:
              access_token:
                  displayName: access_token
                  description: OAuth2 access token
                  type: string
                  required: true
                  repeat: false
    - paginated:
          queryParameters:
              page:
                  description: The page number which should be displayed. Note that the first page is numbered zero rather than one. Additionally, negative and undefined valued are interpreted as zero.
                  type: integer
                  required: false
                  repeat: false
              size:
                  description: The desired size of each page. This specifies the maximum number of values that should be returned by the server. Zero, undefined, and negative values should result in all possible values being returned.
                  type: integer
                  required: false
                  repeat: false

resourceTypes:
    - collection:
        get:
            is: [ secured ]
            responses:
                200:
                  description: Collection retrieved succesfully
                  body:
                      application/json:
                          schema: <<schema>>
                404:
                  description: Collection is empty.
        post:
            is: [ secured ]
            body:
                application/json:
                    schema: <<schema>>
            responses:
                201:
                  description: Item created succesfully
                  body:
                      application/json:
                          schema: <<schema>>
    - member:
        get:
            is: [ secured ]
            responses:
                200:
                    body:
                        application/json:
                            schema: <<schema>>
        post:
            is: [ secured ]
            body:
                application/json:
                    schema: <<schema>>
            responses:
                200:
                    body:
                        application/json:
                            schema: <<schema>>
        delete:
            is: [ secured ]
            responses:
                200:

/api:
  /orders:
      displayName: Order
      get:
          is: [ secured ]
          description: Get all orders.
          responses:
              200:
                  body:
                    application/json:
                      schema: orderDtoArray
              403:
                  body:
                    application/json:
                      schema: localizedMessage
      post:
          is: [ secured ]
          description: Creates new order.
          body:
              application/json:
                schema: orderDto
          responses:
              201:
                  body:
                    application/json:
                      schema: orderDto
              409:
                  body:
                    application/json:
                      schema: localizedMessage
              403:
                  body:
                    application/json:
                      schema: localizedMessage
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Get chosen order.
              responses:
                  200:
                      body:
                        application/json:
                          schema: orderDto
                  404:
                  403:
                      body:
                        application/json:
                          schema: localizedMessage
          /export:
              get:
                  is: [ secured ]
                  description: Export Order to csv.
                  queryParameters:
                      type:
                          displayName: type
                          type: string
                          required: false
                          default: csv
                          repeat: false
                  responses:
                    200:
                      headers:
                        Content-Disposition:
                      body:
                        text/csv:
                    400:
                      body:
                        application/json:
                    403:
                        body:
                          application/json:
                            schema: localizedMessage
                    404:
                      body:
                        application/json:
          /retry:
              get:
                  is: [ secured ]
                  description: Manually retry for transferring order file via FTP after updating or checking the FTP transfer properties.
                  responses:
                    200:
                      body:
                        application/json:
                          schema: resultDto
                    404:
                      body:
                        application/json:
                          schema: localizedMessage
                    400:
                      body:
                        application/json:
                          schema: localizedMessage
          /proofOfDeliveries:
              get:
                  is: [ secured ]
                  description: Gets proof of deliveries related with the given order.
                  responses:
                    200:
                      body:
                        application/json:
                          schema: proofOfDeliveryDtoArray
                    404:
                      body:
                        application/json:
                          schema: localizedMessage
                    403:
                      body:
                        application/json:
                          schema: localizedMessage
      /search:
              get:
                  is: [ secured, paginated ]
                  description: Find Orders with matched parameters. Filtered by warehouses for which the user has ORDERS_VIEW or PODS_MANAGE right.
                  queryParameters:
                      supplyingFacility:
                          displayName: supplyingFacility
                          description: supplyingFacility ID
                          type: string
                          required: false
                          repeat: false
                      requestingFacility:
                          displayName: requestingFacility
                          description: requestingFacility ID
                          type: string
                          required: false
                          repeat: false
                      program:
                          displayName: program
                          description: program ID
                          type: string
                          required: false
                          repeat: false
                      processingPeriod:
                          displayName: processingPeriod
                          description: processingPeriod ID
                          type: string
                          required: false
                          repeat: false
                      status:
                          displayName: status
                          description: Order status
                          type: string
                          required: false
                          repeat: true
                          enum:
                              - ORDERED
                              - IN_TRANSIT
                              - PICKING
                              - PICKED
                              - SHIPPED
                              - RECEIVED
                              - TRANSFER_FAILED
                              - IN_ROUTE
                              - READY_TO_PACK
                  responses:
                      200:
                          body:
                            application/json:
                              schema: orderDtoPage
                      400:
                          body:
                            application/json:
                              schema: localizedMessage
      /{id}/print:
          uriParameters:
              id:
                  displayName: orderId
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Print all order line items from an order to a csv or pdf file.
              queryParameters:
                  format:
                      displayName: format
                      type: string
                      required: true
                      repeat: false
              responses:
                  200:
                      headers:
                        Content-Disposition:
                      body:
                        application/pdf:
                        text/csv:
                  404:
                      body:
                        application/json:
                          schema: localizedMessage
                  403:
                      body:
                        application/json:
                          schema: localizedMessage
  /orderNumberConfigurations:
      displayName: OrderNumberConfiguration
      get:
          is: [ secured ]
          description: Get OrderNumberConfiguration.
          responses:
              200:
                  body:
                    application/json:
                      schema: orderNumberConfigurationDto
              403:
                  body:
                    application/json:
                      schema: localizedMessage
              404:
      post:
          is: [ secured ]
          description: Create or Update OrderNumberConfiguration.
          body:
              application/json:
                schema: orderNumberConfigurationDto
          responses:
            200:
              body:
                application/json:
                  schema: orderNumberConfigurationDto
            400:
              body:
                application/json:
            403:
              body:
                application/json:
                  schema: localizedMessage
  /proofOfDeliveries:
      displayName: Proof Of Delivery
      get:
          is: [ secured ]
          description: Get all proofOfDeliveries.
          responses:
              200:
                  body:
                    application/json:
                      schema: proofOfDeliveryDtoArray
              404:
              403:
                  body:
                    application/json:
                      schema: localizedMessage
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          get:
              is: [ secured ]
              description: Get chosen proofOfDelivery.
              responses:
                  200:
                      body:
                        application/json:
                          schema: proofOfDeliveryDto
                  404:
                  403:
                      body:
                        application/json:
                          schema: localizedMessage
          put:
              is: [ secured ]
              description: Update existing proofOfDelivery.
              body:
                  application/json:
                    schema: proofOfDeliveryDto
              responses:
                  200:
                      body:
                        application/json:
                          schema: proofOfDeliveryDto
                  400:
                      body:
                        application/json:
                          schema: localizedMessage
                  403:
                      body:
                        application/json:
                          schema: localizedMessage
      /{id}/print:
          uriParameters:
                id:
                    displayName: proofOfDeliveryId
                    type: string
                    required: true
                    repeat: false
          get:
              is: [ secured ]
              description: Print proof of delivery to a pdf file.
              responses:
                  200:
                      body:
                        application/pdf:
                  400:
                      body:
                        application/json:
                          schema: localizedMessage
                  403:
                      body:
                        application/json:
                          schema: localizedMessage
      /{id}/submit:
          uriParameters:
                id:
                    displayName: proofOfDeliveryId
                    type: string
                    required: true
                    repeat: false
          post:
              is: [ secured ]
              description: Submit proof of delivery.
              responses:
                  200:
                      body:
                          application/json:
                              schema: proofOfDeliveryDto
                  400:
                      body:
                          application/json:
                              schema: badRequestResponse
                  404:
                      body:
                          application/json:
                              schema: localizedMessage
                  403:
                      body:
                        application/json:
                          schema: localizedMessage
  /orderFileTemplates:
      displayName: OrderFileTemplate
      get:
          is: [ secured ]
          description: Get OrderFileTemplate.
          responses:
              200:
                  body:
                    application/json:
                      schema: orderFileTemplateDto
              404:
              403:
                  body:
                    application/json:
                      schema: localizedMessage
      put:
          is: [ secured ]
          description: Update orderFileTemplate.
          body:
              application/json:
                schema: orderFileTemplateDto
          responses:
              200:
                  body:
                    application/json:
                      schema: orderFileTemplateDto
              400:
                  body:
                    application/json:
              403:
                  body:
                    application/json:
                      schema: localizedMessage
  /proofOfDeliveryTemplates:
      displayName: Proof of delivery report template.
      post:
            is: [ secured ]
            description: Save Proof Of Delivery report template in database.
            body:
                multipart/form-data:
                  formParameters:
                      file:
                           displayName: Template with .jrxml format
                           type: file
                           required: false
                           repeat: false
            responses:
                200:
                403:
                    body:
                      application/json:
                        schema: localizedMessage
      get:
            is: [ secured ]
            description: Download Proof Of Delivery report template with jrxml format.
            responses:
                200:
                    body:
                      application/xml:
                403:
                    body:
                      application/json:
                        schema: localizedMessage
                404:
                    body:
                      application/json:
  /reports/templates/fulfillment:
      displayName: Report Template
      post:
            is: [ secured ]
            description: Add report template to database.
            body:
                multipart/form-data:
                  formParameters:
                      file:
                           displayName: Template with .jrxml format
                           type: file
                           required: false
                           repeat: false
                      name:
                           displayName: Name of Template in database
                           type: string
                           required: false
                           repeat: false
                      description:
                           displayName: Descryption of Template
                           type: string
                           required: false
                           repeat: false
            responses:
                200:
      get:
          is: [ secured ]
          description: Get all templates.
          responses:
              200:
                  body:
                    application/json:
                      schema: templateDtoArray
              404:
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen template.
              responses:
                  204:
                  404:
          get:
              is: [ secured ]
              description: Get chosen template.
              responses:
                  200:
                      body:
                        application/json:
                          schema: templateDto
                  404:
          put:
              is: [ secured ]
              description: Update existing template.
              body:
                  application/json:
                    schema: templateDto
              responses:
                  200:
                      body:
                        application/json:
                          schema: templateDto
  /transferProperties:
      displayName: Transfer properties for facilities.
      post:
          is: [ secured ]
          description: Creates new transfer properties.
          body:
              application/json:
                schema: transferProperties
          responses:
              201:
                  body:
                    application/json:
                      schema: transferProperties
              400:
                  body:
                      application/json:
                          schema: badRequestResponse
              403:
                  body:
                    application/json:
                      schema: localizedMessage
              409:
      /{id}:
          uriParameters:
              id:
                  displayName: id
                  type: string
                  required: true
                  repeat: false
          delete:
              is: [ secured ]
              description: Delete chosen transfer properties.
              responses:
                  204:
                  403:
                      body:
                        application/json:
                          schema: localizedMessage
                  404:
                  409:
                      body:
                        application/json:
                          schema: localizedMessage
          get:
              is: [ secured ]
              description: Get chosen transfer properties.
              responses:
                  200:
                      body:
                        application/json:
                          schema: transferProperties
                  403:
                      body:
                        application/json:
                          schema: localizedMessage
                  404:
          put:
              is: [ secured ]
              description: Update existing transfer properties.
              body:
                  application/json:
                    schema: transferProperties
              responses:
                  200:
                      body:
                        application/json:
                          schema: transferProperties
                  400:
                      body:
                          application/json:
                            schema: badRequestResponse
                  404:
                  403:
                      body:
                        application/json:
                          schema: localizedMessage
      /search:
              get:
                  is: [ secured ]
                  description: Find transfer properties by facility id.
                  queryParameters:
                      facility:
                          displayName: facility
                          description: facility ID
                          type: string
                          required: true
                          repeat: false
                  responses:
                      200:
                          body:
                            application/json:
                              schema: transferProperties
                      403:
                          body:
                            application/json:
                              schema: localizedMessage
                      404:
  /configurationSettings:
      displayName: Configuration settings.
      get:
          is: [ secured ]
          description: Get all configuration settings.
          responses:
              200:
                  body:
                    application/json:
                      schema: configurationSettingArray
              403:
                  body:
                    application/json:
                      schema: localizedMessage
      put:
          is: [ secured ]
          description: update configuration setting with the given key.
          body:
            application/json:
                schema: configurationSetting
          responses:
              200:
                  body:
                    application/json:
                      schema: configurationSetting
              404:
                  body:
                    application/json:
                      schema: localizedMessage
              403:
                  body:
                    application/json:
                      schema: localizedMessage
